{"version":3,"sources":["redux/types.js","redux/reducer.js","redux/store.js","component/createPost/CreatePost.js","redux/actions.js","component/post/post.js","App.js","index.js"],"names":["ADD_POST","initialStore","id","name","avatar","nickname","date","content","image","message","messageIsPressed","reTweet","reTweetIsPressed","like","likeIsPressed","reducer","store","action","type","console","log","payload","createStore","composeWithDevTools","applyMiddleware","thunk","CreatePost","props","avatarID","nameDropDown","updateData","d","Date","day","getDate","month","getMonth","st","getState","setState","length","handleAvatar","e","a","avasURL","handleDropDown","target","value","state","this","storeUnsubscribe","subscribe","className","onClick","src","onChange","alt","placeholder","defaultValue","addPost","document","getElementById","reset","Component","connect","dispatch","arg","changeMessage","changeReTweet","changeLike","path","width","App","forceUpdate","useState","setValue","useForceUpdate","map","post","index","key","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.13e828e8.chunk.js","sourcesContent":["export const CHANGE_MESSAGE = 'CHANGE_MESSAGE';\nexport const CHANGE_RETWEET = 'CHANGE_RETWEET';\nexport const CHANGE_LIKE = 'CHANGE_LIKE';\nexport const ADD_POST = 'ADD_POST';\n\n","import { CHANGE_MESSAGE, CHANGE_RETWEET, CHANGE_LIKE, ADD_POST } from \"./types\";\nimport store from \"./store\";\n\nconst initialStore = [\n  {\n    id: 3,\n    name: \"Anakin Skywalker\",\n    avatar: \"https://github.com/akylik/hw18-react2/blob/gh-pages/img/skywalker-ava.jpg?raw=true\",\n    nickname: \"@anakin-skywalker\",\n    date: \"14 mar.\",\n    content: \"WTF? Who is Ray? Why she is Skywalker? Luke...?\",\n    image: \"https://specials-images.forbesimg.com/imageserve/5e63b3c8e1e617000759130e/960x0.jpg?fit=scale\",\n    message: 482,\n    messageIsPressed: false,\n    reTweet: 146,\n    reTweetIsPressed: false,\n    like: 529,\n    likeIsPressed: false,\n  },\n];\n\nfunction reducer (store = initialStore, action) {\n  switch(action.type) {\n    case ADD_POST: {\n      console.log([...store, {...action.payload}]);\n      return [{...action.payload}, ...store];\n    }\n  }\n  return store;\n}\n\nexport default reducer;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\nimport reducer from './reducer';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk)\n));\n\nexport default store;\n","import React, {Component} from \"react\";\nimport './CreatePost.css';\nimport store from '../../redux/store';\nimport {connect, useDispatch} from 'react-redux';\nimport reducer from '../../redux/reducer.js';\nimport { changeMessage, changeReTweet, changeLike, addPost } from \"../../redux/actions\";\n\nclass CreatePost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      name: \"\",\n      avatar: \"\",\n      nickname: \"\",\n      date: \"\",\n      content: \"\",\n      image: \"\",\n      message: 0,\n      messageIsPressed: false,\n      reTweet: 0,\n      reTweetIsPressed: false,\n      like: 0,\n      likeIsPressed: false,\n    };\n  };\n\n  avatarID = 3;\n  nameDropDown = ['Dart Weider', 'Sky Walker', 'Sheev Palpatine', 'Leia Organa'];\n\n  componentWillMount() {\n    console.log('componentWillUnmount');\n    this.storeUnsubscribe = store.subscribe(() => {\n      this.updateData();\n    });\n  }\n\n  componentDidMount() {\n    this.updateData();\n  };\n\n  componentWillUnmount() {\n    this.storeUnsubscribe();\n    this.setState({name: this.nameDropDown[0]});\n    this.setState({nickname: ''});\n    this.setState({content: ''});\n    this.setState({image: ''});\n  };\n\n  updateData = () => {\n    const getRnd = (min, max) => { return (Math.round(Math.random() * (max - min) + min)) };\n    const d = new Date();\n    const day = d.getDate();\n    const month = d.getMonth();\n    const strMonth = ['jan.', 'feb.', 'mar.', 'apr.', 'may', 'jun.', 'jul.', 'aug.', 'sep.', 'oct.', 'nov.', 'dec.'];\n    const st = store.getState();\n    this.setState({id: st.length + 1});\n    this.setState({avatar: \"https://github.com/akylik/hw18-react2/blob/gh-pages/img/dartWeider-ava.jpg?raw=true\"});\n    this.setState({date: day + ' ' + strMonth[month]});\n    };\n\n  handleAvatar = async (e) => {\n    if (this.avatarID >= 3) this.avatarID = 0;\n      else this.avatarID += 1;\n    const avasURL = [\n      \"https://github.com/akylik/hw18-react2/blob/gh-pages/img/skywalker-ava.jpg?raw=true\",\n      \"https://github.com/akylik/hw18-react2/blob/gh-pages/img/sheevPalpatine-ava.jpg?raw=true\",\n      \"https://github.com/akylik/hw18-react2/blob/gh-pages/img/leiaOrgana-ava.jpg?raw=true\",\n      \"https://github.com/akylik/hw18-react2/blob/gh-pages/img/dartWeider-ava.jpg?raw=true\",\n    ];\n    await this.setState({avatar: avasURL[this.avatarID]});\n  };\n\n  handleDropDown = async (e) => {\n    this.setState({name: e.target.value});\n  }\n\n  render() {\n    const path = 'https://github.com/akylik/hw18-react2/blob/gh-pages/img/';\n    return (\n      <div className={\"background\"}>\n        <div className=\"create_card\">\n          <div className=\"create_card_header\">\n            <span className=\"create_card_header_avatar\" onClick={this.handleAvatar}>\n              <img src={this.state.avatar} />\n            </span>\n            <span className=\"create_card_header_textBox\">\n              <div className=\"create_card_header_textBox_name\">\n                <form id=\"add_post\">\n                  <select className=\"create_hero_name\"\n                          value={this.state.name}\n                          onChange={this.handleDropDown}>\n                    <option value={this.nameDropDown[0]}>Dart Weider</option>\n                    <option value={this.nameDropDown[1]}>Sky Walker</option>\n                    <option value={this.nameDropDown[2]}>Sheev Palpatine</option>\n                    <option value={this.nameDropDown[3]}>Leia Organa</option>\n                  </select>\n                  <img src={`${path}` + \"star-active.png?raw=true\"} className=\"star-active\" alt=\"Active Button\"/>\n                  <span>&nbsp; </span>\n                  <input className=\"create_hero_nick\"\n                         placeholder=\"Nickname...\"\n                         defaultValue={this.state.nickname}\n                         onChange={e => this.state.nickname = e.target.value}\n                  >\n                  </input>\n                  &bull; {this.state.date}\n                  <input className=\"create_hero_text\"\n                         placeholder=\"Text...\"\n                         onChange={e => this.state.content = e.target.value}\n                  >\n                  </input>\n                  <input className=\"create_card_url\"\n                         placeholder=\"Picture URL...\"\n                         onChange={e => this.state.image = e.target.value}\n                  >\n                  </input>\n                </form>\n              </div>\n              <div className=\"create_card_header_textBox_status\">\n                <span></span>\n              </div>\n            </span>\n          </div>\n\n          <div className=\"create_card_center\">\n          </div>\n\n          <div className=\"create_card_footer\">\n          </div>\n        </div>\n\n        <div>\n            <button className=\"create_publish_btn\"\n                    type=\"submit\"\n                    onClick={async () => { await this.setState({nickname: '@'+this.state.nickname})\n                                           await this.props.addPost(this.state)\n                                           await this.setState({nickname: ''})\n                                           await this.setState({name: this.nameDropDown[0]})\n                                           await this.setState({image: ''})\n                                           document.getElementById(\"add_post\").reset()\n                    }}\n            >\n              Publish\n            </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst getStateToProps = (state) => {\n  console.log(state);\n  return {\n //   message: state.message,\n  }\n}\n\nconst getDispatchToProps = (dispatch) => {\n  return {\n    addPost: (arg) => dispatch(addPost(arg)),\n  }\n}\n\nexport default connect(getStateToProps, getDispatchToProps)(CreatePost);\n","import { CHANGE_MESSAGE, CHANGE_RETWEET, CHANGE_LIKE, ADD_POST } from \"./types\";\n\nconst changeMessage = text => {\n  return { type: CHANGE_MESSAGE, payload: text }\n}\n\nconst changeReTweet = text => {\n  return { type: CHANGE_RETWEET, payload: text }\n}\n\nconst changeLike = text => {\n  return { type: CHANGE_LIKE, payload: text }\n}\n\nconst addPost = obj => {\n  return { type: ADD_POST, payload: obj }\n}\n\nexport { changeMessage, changeReTweet, changeLike, addPost };\n","import React, {Component} from \"react\";\nimport {connect, useDispatch} from 'react-redux';\nimport reducer from '../../redux/reducer.js';\nimport store from '../../redux/store';\nimport { changeMessage, changeReTweet, changeLike, addPost } from \"../../redux/actions\";\n\n\nconst Post = (props) => {\n  const path = 'https://github.com/akylik/hw18-react2/blob/gh-pages/img/';\n  return (\n    <div className={\"background\"}>\n      <div className=\"card\">\n        <div className=\"card__header\">\n          <span className=\"card__header_avatar\">\n            <img src={props.avatar} />\n          </span>\n          <span className=\"card__header__textBox\">\n            <div className=\"card__header__textBox_name\">\n              <span className=\"bold\">{props.name}</span>\n              <img src={`${path}`+\"star-active.png?raw=true\"} className=\"star-active\" alt=\"Active Button\" />\n              <span className=\"gray\"><a>{props.nickname}</a> &bull; {props.date}</span>\n            </div>\n            <div className=\"card__header__textBox_status\">\n              <span>{props.content}</span>\n            </div>\n          </span>\n          <span className=\"card__header__textBox_dw_Arrow\"><img src={`${path}`+\"down-arrow.png?raw=true\"} width=\"14px\" alt=\"Down Arrow\"/></span>\n        </div>\n\n        <div className=\"card__center\">\n          <img src={props.image} />\n        </div>\n\n        <div className=\"card__footer\">\n        <span>\n          <a src=\"#\"><img src={`${path}`+\"tw-message.png?raw=true\"} alt=\"Message Icon\"/><span className=\"icon2text\">{props.message}</span></a>\n        </span>\n        <span className=\"leftTab\">\n          <a src=\"#\"><img src={`${path}`+\"tw-retweet.png?raw=true\"} alt=\"Retweet Icon\"/><span className=\"icon2text\">{props.reTweet}</span></a>\n        </span>\n        <span className=\"leftTab\" onClick={(e) => props.changeLike(e.target)}>\n          <a src=\"#\"><img src={`${path}`+\"tw-like.png?raw=true\"} alt=\"Like Icon\"/>\n          <span className=\"icon2text\">\n            {props.like}\n          </span>\n          </a>\n        </span>\n        <span className=\"leftTab\">\n          <a src=\"#\"><img src={`${path}`+\"tw-share.png?raw=true\"} alt=\"Share Icon\" /></a>\n        </span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst getStateToProps = (state) => {\n  return {\n    // message: state.message,\n    // reTweet: state.reTweet,\n    // like: state.like,\n  }\n}\n\nconst getDispatchToProps = (dispatch) => {\n  return {\n    changeMessage: e => dispatch(changeMessage(e)),\n    changeReTweet: e => dispatch(changeReTweet(e)),\n    changeLike: e => dispatch(changeLike(e)),\n  }\n}\n\nexport default connect(getStateToProps, getDispatchToProps)(Post);\n","import React, { useState } from 'react';\nimport CreatePost from './component/createPost/CreatePost';\nimport Post from './component/post/post';\nimport './component/post/post.css';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); \n  return () => setValue(value => ++value); \n}\n\nfunction App() {\n  const forceUpdate = useForceUpdate();\n\n  store.subscribe(() => {\n    forceUpdate();\n  });\n\n  return (\n    <Provider store={store}>\n      <div>\n        <div>\n          <CreatePost />\n        </div>\n        <div>\n          { store.getState().map((post, index) => <Post {...post} key={index} /> )}\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}